{"version":3,"sources":["meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/api/powerbox.js","meteor://ðŸ’»app/server/main.js"],"names":["module","link","Meteor","v","headers","Axios","default","dns","accessToken","sessionId","urlRegex","testUrl","isServer","methods","claimToken","self","console","log","get","getAccessToken","fetchImage","proxyParsed","process","env","HTTP_PROXY","match","requestData","JSON","stringify","resData","proxy","protocol","host","port","Number","method","url","data","then","response","cap","catch","error","lookup","err","address","family","length","message"],"mappings":"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","file":"/app.js","sourcesContent":["// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","// Import server startup through a single index entry point\n\nimport '/imports/startup/both';\nimport '/imports/startup/server';\nimport '/imports/api/powerbox';","import { Meteor } from 'meteor/meteor';\nimport { headers } from 'meteor/gadicohen:headers';\nimport Axios from 'axios';\nimport dns from 'dns';\n\nvar accessToken;\nvar sessionId;\nconst urlRegex = /([a-z0-9]+):\\/\\/([a-z0-9\\.]+):([\\d]+)/;\nconst testUrl = 'https:/35.192.197.33/primaries/AspiringZealotPrimary.jpeg';\n\nif (Meteor.isServer) {\n\tMeteor.methods({\n\t\t\"sandstorm.submitClaimToken\"(claimToken) {\n\t\t\tconst self = this;\n\t\t\tconsole.log(`claimToken = ${claimToken}`);\n\t\t\tsessionId = headers.get(self, 'x-sandstorm-session-id');\n\t\t\tconsole.log(`sessionId = ${sessionId}`);\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tgetAccessToken(claimToken);\n\t\t\t} else {\n\t\t\t\tconsole.log('getting access token')\n\t\t\t}\n\t\t},\n\n\t\t\"sandstorm.fetchImage\"() {\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tfetchImage(accessToken);\n\t\t\t} else {\n\t\t\t\tconsole.log('fetching image');\n\t\t\t}\n\n\t\t}\n\t})\n}\n\nfunction getAccessToken(claimToken) {\n\tconst proxyParsed = process.env.HTTP_PROXY.match(urlRegex);\n\tconst requestData = JSON.stringify({\n\t\t\"requestToken\": claimToken,\n\t\t\"requiredPermissions\": [],\n\t});\n\tvar resData = \"\";\n\tAxios({\n\t\tproxy: {\n\t\t\tprotocol: proxyParsed[1],\n\t\t\thost: proxyParsed[2],\n\t\t\tport: Number(proxyParsed[3]),\n\t\t},\n\t\tmethod: \"POST\",\n\t\turl: `http://http-bridge/session/${sessionId}/claim`,\n\t\tdata: {\n\t\t\t\"requestToken\": claimToken,\n\t\t\t\"requiredPermissions\": [],\n\t\t}\n\t})\n\t.then(function(response) {\n\t\tconsole.log('setting access token');\n\t\tconsole.log(response.data);\n\t\taccessToken = response.data.cap;\n\t})\n\t.catch((error) => {console.error(error)})\n\n};\n\nfunction fetchImage(accessToken) {\n\tdns.lookup('sot-images.sweetvinesystems.com', function(err, address, family) {\n\t\tif (err) {\n\t\t\tconsole.log(\"Error: \" + err);\n\t\t} else {\n\t\t\tconsole.log(address);\n\t\t}\n\t});\n\tif (!accessToken) return;\n\tconsole.log(\"fetchImage\");\n\tconsole.log(accessToken);\n\tconst proxyParsed = process.env.HTTP_PROXY.match(urlRegex);\n\tAxios({\n\t\tproxy: {\n\t\t\tprotocol: proxyParsed[1],\n\t\t\thost: proxyParsed[2],\n\t\t\tport: Number(proxyParsed[3]),\n\t\t},\n\t\tmethod: 'GET',\n\t\turl: testUrl,\n\t\theaders: {'Authorization': `Bearer ${accessToken}`}\n\t})\n\t.then((response => {\n\t\tconsole.log('successful response');\n\t\tconsole.log(response.data.length);\n\t}))\n\t.catch((error) => {\n\t\tconsole.log(error.message);\n\t});\n}","// Server entry point, imports all server code\n\nimport '/imports/startup/server';\nimport '/imports/startup/both';\n"]}